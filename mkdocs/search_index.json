{
    "docs": [
        {
            "location": "/", 
            "text": "Programa\u00e7\u00e3o Orientada a Objeto\n\n\nReposit\u00f3rio no Github\n\n\nAcesse os exerc\u00edcios no Reposit\u00f3rio do Github \nprogramacao.orientada.objeto\n.\n\n\nDescri\u00e7\u00e3o\n\n\nC\u00f3digos desenvolvidos com a Linguagem Java na disciplina de Programa\u00e7\u00e3o Orientada a Objetos do curso de Analise e Desenvolvimento de Sistemas da FATEC de Franca.\n\n\nAluno:\n Getulio Vinicius Teixeira da Silva\n\n\nProfessor:\n Dr. Daniel Facciolo Pires\n\n\nOs exerc\u00edcios foram feitos em sala de aula, laborat\u00f3rio, no 1\u00ba Semestre do ano de 2017 utilizando:\n\n\n\n\n\n\nIDE: Netbeans 8.1;\n\n\n\n\n\n\nJDK: OpenJDK 1.8.0_121;\n\n\n\n\n\n\nSistema Operacional: Ubuntu 16.04 LTS.\n\n\n\n\n\n\nLicen\u00e7a:\n\n\nGNU GENERAL PUBLIC LICENSE - Version 3, 29 June 2007\n.", 
            "title": "Inicio"
        }, 
        {
            "location": "/#programacao-orientada-a-objeto", 
            "text": "", 
            "title": "Programa\u00e7\u00e3o Orientada a Objeto"
        }, 
        {
            "location": "/#repositorio-no-github", 
            "text": "Acesse os exerc\u00edcios no Reposit\u00f3rio do Github  programacao.orientada.objeto .", 
            "title": "Reposit\u00f3rio no Github"
        }, 
        {
            "location": "/#descricao", 
            "text": "C\u00f3digos desenvolvidos com a Linguagem Java na disciplina de Programa\u00e7\u00e3o Orientada a Objetos do curso de Analise e Desenvolvimento de Sistemas da FATEC de Franca.  Aluno:  Getulio Vinicius Teixeira da Silva  Professor:  Dr. Daniel Facciolo Pires  Os exerc\u00edcios foram feitos em sala de aula, laborat\u00f3rio, no 1\u00ba Semestre do ano de 2017 utilizando:    IDE: Netbeans 8.1;    JDK: OpenJDK 1.8.0_121;    Sistema Operacional: Ubuntu 16.04 LTS.", 
            "title": "Descri\u00e7\u00e3o"
        }, 
        {
            "location": "/#licenca", 
            "text": "GNU GENERAL PUBLIC LICENSE - Version 3, 29 June 2007 .", 
            "title": "Licen\u00e7a:"
        }, 
        {
            "location": "/lista-1/", 
            "text": "Lista de Exerc\u00edcios 1\n\n\nLista de exerc\u00edcios propostos pelo \nProf. Daniel Facciolo Pires\n.\n\n\n\n\nClasses\n\n\nObjetos\n\n\nM\u00e9todos Construtores\n\n\nVari\u00e1veis\n\n\nM\u00e9todos de inst\u00e2ncia\n\n\n\n\nAcesse os \nC\u00f3digos\n.\n\n\nExerc\u00edcio 1:\n\n\n\n\nCrie uma classe em Java chamada Aluno contendo as vari\u00e1veis de inst\u00e2ncia numeroAluno (int), nome (String), idade (int), p1 (float) e p2 (float),\n\n\nCrie o construtor\n\n\nCrie os m\u00e9todos notaFinal() - que calcula e retorna a m\u00e9dia final do aluno - , e dadosAluno() - que retorna os valores de numeroAluno, nome e idade.\n\n\nCriar uma classe TestaAluno com o m\u00e9todo main() para instancia\u00e7\u00e3o da classe Aluno (atribui\u00e7\u00e3o das vari\u00e1veis de inst\u00e2ncia com quaisquer valores e chamada dos m\u00e9todos notaFinal() e dadosAluno()).\n\n\nAdicionar o m\u00e9todo passou() \u00e0 classe Aluno a fim de verificar se o aluno passou. Chame o m\u00e9todo passou() na classe TestaAluno a fim de testa-lo.\n\n\n\n\nExerc\u00edcio 2:\n\n\n\n\nCrie uma classe em Java chamada Cliente contendo as vari\u00e1veis de inst\u00e2ncia numeroConta (int), numeroAgencia (int), nome (String) e saldo (float),\n\n\nCrie um m\u00e9todo construtor para inicializa\u00e7\u00e3o das vari\u00e1veis quando um objeto da classe for criado.\n\n\nCrie os m\u00e9todos public  realizarDeposito() e realizarSaque() que, realizam dep\u00f3sito e saque, respectivamente, na conta do cliente.\n\n\nCrie um outro m\u00e9todo public que retorna o numero da conta, nome do cliente e saldo atual.\n\n\nCriar uma classe TestaCliente para instancia\u00e7\u00e3o da classe Cliente como Fulano. Chamar os m\u00e9todos realizarDeposito() e realizarSaque() nessa classe para que o saldo seja modificado.\n\n\nCriar, tamb\u00e9m na classe TestaCliente, um outro cliente (Beltrano) e realizar as mesmas atividades do Fulano.\n\n\n\n\nExerc\u00edcio 3:\n\n\n\n\nImplemente em Java uma classe chamada Produto contendo as vari\u00e1veis id (int), descri\u00e7\u00e3o (String), qtde (int) e preco (float). Essa classe deve possuir os dois m\u00e9todos construtores, com e sem par\u00e2metros, e ainda os m\u00e9todos:\n\n\ncomprar(int x): que compra um produto aumentando em x a quantidade em estoque;\n\n\nvender(int x): que vende um produto aumentando em x a quantidade em estoque;\n\n\nsubir(float x): que aumenta o pre\u00e7o do produto em x unidades;\n\n\ndescer(float x): que diminui o pre\u00e7o do produto em x unidades;\n\n\nmostra(): que mostra todas as informa\u00e7\u00f5es do produto\n\n\nFinalmente, cria uma classe TestaProduto, que cria dois Produtos (cada um deve utilizar um construtor diferente) e teste os m\u00e9todos criados.\n\n\n\n\nExerc\u00edcio 4:\n\n\n\n\nImplemente em Java uma classe chamada Rio contendo as vari\u00e1veis nome(String), n\u00edvel (float) e polu\u00eddo (boolean). Essa classe deve possuir os dois m\u00e9todos construtores, com e sem par\u00e2metros, e ainda os m\u00e9todos:\n\n\nchover(float): que aumenta o n\u00edvel atual do rio;\n\n\nensolarar(float): que diminui o n\u00edvel atual do rio;\n\n\nlimpar(): que limpa o rio;\n\n\nsujar(): que polui o rio;\n\n\nmostra(): que mostra todas as informa\u00e7\u00f5es do rio.\n\n\nFinalmente, cria uma classe TestaRio, que cria dois Rios (cada um deve utilizar um construtor diferente) e teste os m\u00e9todos criados.", 
            "title": "Lista de exerc\u00edcios 1"
        }, 
        {
            "location": "/lista-1/#lista-de-exercicios-1", 
            "text": "Lista de exerc\u00edcios propostos pelo  Prof. Daniel Facciolo Pires .   Classes  Objetos  M\u00e9todos Construtores  Vari\u00e1veis  M\u00e9todos de inst\u00e2ncia   Acesse os  C\u00f3digos .", 
            "title": "Lista de Exerc\u00edcios 1"
        }, 
        {
            "location": "/lista-1/#exercicio-1", 
            "text": "Crie uma classe em Java chamada Aluno contendo as vari\u00e1veis de inst\u00e2ncia numeroAluno (int), nome (String), idade (int), p1 (float) e p2 (float),  Crie o construtor  Crie os m\u00e9todos notaFinal() - que calcula e retorna a m\u00e9dia final do aluno - , e dadosAluno() - que retorna os valores de numeroAluno, nome e idade.  Criar uma classe TestaAluno com o m\u00e9todo main() para instancia\u00e7\u00e3o da classe Aluno (atribui\u00e7\u00e3o das vari\u00e1veis de inst\u00e2ncia com quaisquer valores e chamada dos m\u00e9todos notaFinal() e dadosAluno()).  Adicionar o m\u00e9todo passou() \u00e0 classe Aluno a fim de verificar se o aluno passou. Chame o m\u00e9todo passou() na classe TestaAluno a fim de testa-lo.", 
            "title": "Exerc\u00edcio 1:"
        }, 
        {
            "location": "/lista-1/#exercicio-2", 
            "text": "Crie uma classe em Java chamada Cliente contendo as vari\u00e1veis de inst\u00e2ncia numeroConta (int), numeroAgencia (int), nome (String) e saldo (float),  Crie um m\u00e9todo construtor para inicializa\u00e7\u00e3o das vari\u00e1veis quando um objeto da classe for criado.  Crie os m\u00e9todos public  realizarDeposito() e realizarSaque() que, realizam dep\u00f3sito e saque, respectivamente, na conta do cliente.  Crie um outro m\u00e9todo public que retorna o numero da conta, nome do cliente e saldo atual.  Criar uma classe TestaCliente para instancia\u00e7\u00e3o da classe Cliente como Fulano. Chamar os m\u00e9todos realizarDeposito() e realizarSaque() nessa classe para que o saldo seja modificado.  Criar, tamb\u00e9m na classe TestaCliente, um outro cliente (Beltrano) e realizar as mesmas atividades do Fulano.", 
            "title": "Exerc\u00edcio 2:"
        }, 
        {
            "location": "/lista-1/#exercicio-3", 
            "text": "Implemente em Java uma classe chamada Produto contendo as vari\u00e1veis id (int), descri\u00e7\u00e3o (String), qtde (int) e preco (float). Essa classe deve possuir os dois m\u00e9todos construtores, com e sem par\u00e2metros, e ainda os m\u00e9todos:  comprar(int x): que compra um produto aumentando em x a quantidade em estoque;  vender(int x): que vende um produto aumentando em x a quantidade em estoque;  subir(float x): que aumenta o pre\u00e7o do produto em x unidades;  descer(float x): que diminui o pre\u00e7o do produto em x unidades;  mostra(): que mostra todas as informa\u00e7\u00f5es do produto  Finalmente, cria uma classe TestaProduto, que cria dois Produtos (cada um deve utilizar um construtor diferente) e teste os m\u00e9todos criados.", 
            "title": "Exerc\u00edcio 3:"
        }, 
        {
            "location": "/lista-1/#exercicio-4", 
            "text": "Implemente em Java uma classe chamada Rio contendo as vari\u00e1veis nome(String), n\u00edvel (float) e polu\u00eddo (boolean). Essa classe deve possuir os dois m\u00e9todos construtores, com e sem par\u00e2metros, e ainda os m\u00e9todos:  chover(float): que aumenta o n\u00edvel atual do rio;  ensolarar(float): que diminui o n\u00edvel atual do rio;  limpar(): que limpa o rio;  sujar(): que polui o rio;  mostra(): que mostra todas as informa\u00e7\u00f5es do rio.  Finalmente, cria uma classe TestaRio, que cria dois Rios (cada um deve utilizar um construtor diferente) e teste os m\u00e9todos criados.", 
            "title": "Exerc\u00edcio 4:"
        }, 
        {
            "location": "/lista-2/", 
            "text": "Lista de Exerc\u00edcios 2\n\n\nLista de exerc\u00edcios propostos pelo \nProf. Daniel Facciolo Pires\n.\n\n\n\n\nVari\u00e1veis de Inst\u00e2ncia X Vari\u00e1veis de Classe\n\n\nM\u00e9todos de Inst\u00e2ncia X M\u00e9todos de Classe\n\n\nConstrutores\n\n\n\n\nAcesse os \nC\u00f3digos\n.\n\n\nExerc\u00edcio 1\n\n\n\n\nCrie uma classe em Java chamada Veiculo contendo as vari\u00e1veis de inst\u00e2ncia Tipo (String), nroRodas (int), cor (String) e ano (int), e a vari\u00e1vel de classe nomeDono (String);\n\n\nCrie os construtores obrigat\u00f3rios;\n\n\nCrie um m\u00e9todo de inst\u00e2ncia chamado alteraTipo que altera o tipo de um Veiculo;\n\n\nCrie um m\u00e9todo de inst\u00e2ncia chamado mostra que retorna todas as informa\u00e7\u00f5es de um objeto;\n\n\nCrie um m\u00e9todo de classe chamado alteraNome que altera o nome do dono de um ve\u00edculo;\n\n\nCrie um m\u00e9todo de classe chamado retornaNome que retorna o nome do dono de um ve\u00edculo\n\n\nCrie um m\u00e9todo de classe auxiliar chamado nroRodas que recebe o n\u00famero de rodas e retorna se esse n\u00famero \u00e9 par ou \u00edmpar.\n\n\nCrie um m\u00e9todo de classe auxiliar chamado retornaNovoVeiculo que recebe dois ve\u00edculos como par\u00e2metro e retorna um novo ve\u00edculo contendo o tipo do primeiro ve\u00edculo, a soma do n\u00famero de rodas dos dois ve\u00edculos passados como par\u00e2metro, a cor do segundo ve\u00edculo, e o ano do maior ve\u00edculo dentre os dois passados como par\u00e2metro;\n\n\nCriar a classe TestaVeiculo com as seguintes atividades:\n\n\nInstancia\u00e7\u00f5es da classe Ve\u00edculo com os objetos Carro e Moto;\n\n\nImpress\u00e3o das vari\u00e1veis dos objetos Carro e Moto (chamado do m\u00e9todo mostra());\n\n\nModifica\u00e7\u00e3o do conte\u00fado de todas as vari\u00e1veis do objeto Moto; Para alterar o nome do dono, utilize o m\u00e9todo espec\u00edfico;\n\n\nImprimir novamente as vari\u00e1veis de inst\u00e2ncia dos objetos Carro e Moto. O que aconteceu com as vari\u00e1veis do objeto Carro?\n\n\nMostre o uso do m\u00e9todo nroRodas\n\n\nMostre o uso do m\u00e9todo retornaNovoVeiculo\n\n\n\n\n\n\n\n\nExerc\u00edcio 2\n\n\n\n\nCrie uma classe em Java chamada Cliente contendo as vari\u00e1veis de inst\u00e2ncia numeroConta (String), numeroAgencia (String), nome (String) e static saldo (float),\n\n\nCrie um m\u00e9todo construtor para inicializa\u00e7\u00e3o das vari\u00e1veis quando um objeto da classe for criado. Forne\u00e7a tamb\u00e9m um construtor sem argumento com valores default caso nenhum inicializador seja fornecido\n\n\nCrie os m\u00e9todos de inst\u00e2ncia realizarDeposito() e realizarSaque() que realizam dep\u00f3sito e saque, respectivamente, na conta do cliente.\n\n\nCrie um outro m\u00e9todo de inst\u00e2ncia para imprimir o numero da conta, nome do cliente e saldo atual.\n\n\nCrie um m\u00e9todo de classe que altera o saldo do Cliente\n\n\nCrie um m\u00e9todo de classe que retorna o saldo do Cliente\n\n\nCrie um m\u00e9todo de inst\u00e2ncia que altera o n\u00famero de ag\u00eancia do cliente\n\n\nCrie um m\u00e9todo de inst\u00e2ncia que retorna o n\u00famero de ag\u00eancia do cliente\n\n\nCrie um m\u00e9todo de classe auxiliar chamado retornaNovoCliente que receba dois clientes como par\u00e2metro e retorna um terceiro cliente, sendo que este deve ter a soma dos saldos dos clientes passados como par\u00e2metro, o n\u00famero de ag\u00eancia do primeiro cliente passado como par\u00e2metro, o n\u00famero da conta do segundo cliente passado como par\u00e2metro e o nome Fulano.\n\n\nCrie um m\u00e9todo de classe auxiliar chamado verificaTamanho que recebe o n\u00famero da ag\u00eancia de um cliente e retorna se este n\u00famero tem exatamente tamanho 6.\n\n\nCriar uma classe chamada TestaCliente para instancia\u00e7\u00e3o da classe Cliente como Fulano. Chamar os m\u00e9todos realizarDeposito() e realizarSaque() nessa classe para que o saldo seja modificado .\n\n\nCriar, tamb\u00e9m na classe teste, um outro cliente (Beltrano) e realizar as mesmas atividades do Fulano. Realizar testes de modo que apresente como o Fulano pode alterar o saldo de Beltrano.\n\n\nFinalmente, mostre na classe TestaCliente o uso dos m\u00e9todos retornaNovoCliente e verificaTamanho\n\n\n\n\nExerc\u00edcio 3\n\n\n\n\nCrie uma classe em Java chamada MeuString. No m\u00e9todo main(), str1 deve ser instanciada como \"meu primeiro string\". Ap\u00f3s isso, imprima o comprimento e o caracter na posi\u00e7\u00e3o 2 de str1 utilizando m\u00e9todos de inst\u00e2ncia.\n\n\nAinda no m\u00e9todo main(), crie um str2 (String) a partir do valor do comprimento de str1.  Utilize apenas m\u00e9todos de classe.\n\n\n\n\nExerc\u00edcio 4\n\n\n\n\nCrie uma classe em Java chamada Computador contendo uma vari\u00e1vel de inst\u00e2ncia processador (String) e uma vari\u00e1vel de classe ram (int).\n\n\nCrie os construtores da classe.\n\n\nCrie um m\u00e9todo de inst\u00e2ncia para alterar o valor do processador\n\n\nCrie um m\u00e9todo de classe para alterar o valor da ram\n\n\nCrie ainda um m\u00e9todo auxiliar de classe para fazer upgrade na mem\u00f3ria (sempre adicionar mais 256 MB).\n\n\nFinalmente, crie uma classe que teste a primeira (ComputadorTeste). Instancie objetos e fa\u00e7a chamadas aos m\u00e9todos criados com objetivo de test\u00e1-los.", 
            "title": "Lista de exerc\u00edcios 2"
        }, 
        {
            "location": "/lista-2/#lista-de-exercicios-2", 
            "text": "Lista de exerc\u00edcios propostos pelo  Prof. Daniel Facciolo Pires .   Vari\u00e1veis de Inst\u00e2ncia X Vari\u00e1veis de Classe  M\u00e9todos de Inst\u00e2ncia X M\u00e9todos de Classe  Construtores   Acesse os  C\u00f3digos .", 
            "title": "Lista de Exerc\u00edcios 2"
        }, 
        {
            "location": "/lista-2/#exercicio-1", 
            "text": "Crie uma classe em Java chamada Veiculo contendo as vari\u00e1veis de inst\u00e2ncia Tipo (String), nroRodas (int), cor (String) e ano (int), e a vari\u00e1vel de classe nomeDono (String);  Crie os construtores obrigat\u00f3rios;  Crie um m\u00e9todo de inst\u00e2ncia chamado alteraTipo que altera o tipo de um Veiculo;  Crie um m\u00e9todo de inst\u00e2ncia chamado mostra que retorna todas as informa\u00e7\u00f5es de um objeto;  Crie um m\u00e9todo de classe chamado alteraNome que altera o nome do dono de um ve\u00edculo;  Crie um m\u00e9todo de classe chamado retornaNome que retorna o nome do dono de um ve\u00edculo  Crie um m\u00e9todo de classe auxiliar chamado nroRodas que recebe o n\u00famero de rodas e retorna se esse n\u00famero \u00e9 par ou \u00edmpar.  Crie um m\u00e9todo de classe auxiliar chamado retornaNovoVeiculo que recebe dois ve\u00edculos como par\u00e2metro e retorna um novo ve\u00edculo contendo o tipo do primeiro ve\u00edculo, a soma do n\u00famero de rodas dos dois ve\u00edculos passados como par\u00e2metro, a cor do segundo ve\u00edculo, e o ano do maior ve\u00edculo dentre os dois passados como par\u00e2metro;  Criar a classe TestaVeiculo com as seguintes atividades:  Instancia\u00e7\u00f5es da classe Ve\u00edculo com os objetos Carro e Moto;  Impress\u00e3o das vari\u00e1veis dos objetos Carro e Moto (chamado do m\u00e9todo mostra());  Modifica\u00e7\u00e3o do conte\u00fado de todas as vari\u00e1veis do objeto Moto; Para alterar o nome do dono, utilize o m\u00e9todo espec\u00edfico;  Imprimir novamente as vari\u00e1veis de inst\u00e2ncia dos objetos Carro e Moto. O que aconteceu com as vari\u00e1veis do objeto Carro?  Mostre o uso do m\u00e9todo nroRodas  Mostre o uso do m\u00e9todo retornaNovoVeiculo", 
            "title": "Exerc\u00edcio 1"
        }, 
        {
            "location": "/lista-2/#exercicio-2", 
            "text": "Crie uma classe em Java chamada Cliente contendo as vari\u00e1veis de inst\u00e2ncia numeroConta (String), numeroAgencia (String), nome (String) e static saldo (float),  Crie um m\u00e9todo construtor para inicializa\u00e7\u00e3o das vari\u00e1veis quando um objeto da classe for criado. Forne\u00e7a tamb\u00e9m um construtor sem argumento com valores default caso nenhum inicializador seja fornecido  Crie os m\u00e9todos de inst\u00e2ncia realizarDeposito() e realizarSaque() que realizam dep\u00f3sito e saque, respectivamente, na conta do cliente.  Crie um outro m\u00e9todo de inst\u00e2ncia para imprimir o numero da conta, nome do cliente e saldo atual.  Crie um m\u00e9todo de classe que altera o saldo do Cliente  Crie um m\u00e9todo de classe que retorna o saldo do Cliente  Crie um m\u00e9todo de inst\u00e2ncia que altera o n\u00famero de ag\u00eancia do cliente  Crie um m\u00e9todo de inst\u00e2ncia que retorna o n\u00famero de ag\u00eancia do cliente  Crie um m\u00e9todo de classe auxiliar chamado retornaNovoCliente que receba dois clientes como par\u00e2metro e retorna um terceiro cliente, sendo que este deve ter a soma dos saldos dos clientes passados como par\u00e2metro, o n\u00famero de ag\u00eancia do primeiro cliente passado como par\u00e2metro, o n\u00famero da conta do segundo cliente passado como par\u00e2metro e o nome Fulano.  Crie um m\u00e9todo de classe auxiliar chamado verificaTamanho que recebe o n\u00famero da ag\u00eancia de um cliente e retorna se este n\u00famero tem exatamente tamanho 6.  Criar uma classe chamada TestaCliente para instancia\u00e7\u00e3o da classe Cliente como Fulano. Chamar os m\u00e9todos realizarDeposito() e realizarSaque() nessa classe para que o saldo seja modificado .  Criar, tamb\u00e9m na classe teste, um outro cliente (Beltrano) e realizar as mesmas atividades do Fulano. Realizar testes de modo que apresente como o Fulano pode alterar o saldo de Beltrano.  Finalmente, mostre na classe TestaCliente o uso dos m\u00e9todos retornaNovoCliente e verificaTamanho", 
            "title": "Exerc\u00edcio 2"
        }, 
        {
            "location": "/lista-2/#exercicio-3", 
            "text": "Crie uma classe em Java chamada MeuString. No m\u00e9todo main(), str1 deve ser instanciada como \"meu primeiro string\". Ap\u00f3s isso, imprima o comprimento e o caracter na posi\u00e7\u00e3o 2 de str1 utilizando m\u00e9todos de inst\u00e2ncia.  Ainda no m\u00e9todo main(), crie um str2 (String) a partir do valor do comprimento de str1.  Utilize apenas m\u00e9todos de classe.", 
            "title": "Exerc\u00edcio 3"
        }, 
        {
            "location": "/lista-2/#exercicio-4", 
            "text": "Crie uma classe em Java chamada Computador contendo uma vari\u00e1vel de inst\u00e2ncia processador (String) e uma vari\u00e1vel de classe ram (int).  Crie os construtores da classe.  Crie um m\u00e9todo de inst\u00e2ncia para alterar o valor do processador  Crie um m\u00e9todo de classe para alterar o valor da ram  Crie ainda um m\u00e9todo auxiliar de classe para fazer upgrade na mem\u00f3ria (sempre adicionar mais 256 MB).  Finalmente, crie uma classe que teste a primeira (ComputadorTeste). Instancie objetos e fa\u00e7a chamadas aos m\u00e9todos criados com objetivo de test\u00e1-los.", 
            "title": "Exerc\u00edcio 4"
        }
    ]
}